#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<Windows.h>

int high, width;//画面大小
int bird_x, bird_y;//小鸟的位置
int bar_x_down, bar_x_top, bar_y;//障碍物
int score;//得分

//函数外全局变量

void gotoxy(int x, int y) //光标移动到(x,y)位置
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(handle, pos);
}

void HideCursor() // 用于隐藏光标
{
	CONSOLE_CURSOR_INFO cursor_info = { 1, 0 };  // 第二个值为0表示隐藏光标
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursor_info);
}

void startup()//游戏初始化
{
	high = 15;
	width = 20;

	bird_x = 0;
	bird_y = width/3;

	bar_y = width / 2;
	bar_x_top = high / 4;
	bar_x_down = high / 2;
	

	score = 0;
}

void show()//画面显示
{
	gotoxy(0, 0);
	int i, j;
	for (i = 0; i < high; i++)
	{
		for (j = 0; j < width; j++)
		{
			if ((i == bird_x) && (j == bird_y))
				printf("@");//输出小鸟
			else if ((j == bar_y) && ((i <= bar_x_top) || (i >= bar_x_down)))
				printf("*");//输出障碍物
			else 
				printf(" ");//输出空格
		}
		printf("\n");
	}
	printf("得分:%d\n",score);
}

void updateWithInput()//与用户输入有关的更新
{
	char input;
	if (kbhit())
	{
		input = getch();//根据用户输入来执行，不必回车
		if (input == ' ')
		{
			bird_x=bird_x-2;
		}
	}
}

void updateWithoutInput()//与用户输入无关的更新
{
	bird_x++;
	if(bar_y>0)
		bar_y--;
	else
	{
		bar_y = width;

		int randPosition = rand() % (high - 5);
		bar_x_top = randPosition;
		bar_x_down = randPosition + high / 4;//下面的等于上面的下移空缺 
	}
	if (bar_y == bird_y)
	{
		if ((bird_x > bar_x_top) && (bird_x < bar_x_down))
			score++;
		else
			exit(0);
	}
	Sleep(150);
}

int main()
{
	startup();//游戏初始化

	while (1)
	{
		show();//画面显示
		updateWithInput();//与用户输入有关的更新
		updateWithoutInput();//与用户输入无关的更新
	}

	return 0;
}
